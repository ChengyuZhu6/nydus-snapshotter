---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nydus-snapshotter-configs
  labels:
    app: nydus-snapshotter
  namespace: nydus-system
data:
  FS_DRIVER: "fusedev"
  ENABLE_CONFIG_FROM_VOLUME: true
  ENABLE_RUNTIME_SPECIFIC_SNAPSHOTTER: false

  config.toml: |-
    version = 1
    # Snapshotter's own home directory where it stores and creates necessary resources
    root = "/var/lib/containerd-nydus"
    # The snapshotter's GRPC server socket, containerd will connect to plugin on this socket
    address = "/run/containerd-nydus/containerd-nydus-grpc.sock"
    # The nydus daemon mode can be one of the following options: multiple, dedicated, shared, or none. 
    # If `daemon_mode` option is not specified, the default value is multiple.
    daemon_mode = "dedicated"

    [daemon]
    # Specify a configuration file for nydusd
    nydusd_config = "/etc/nydus-snapshotter/nydusd-config.json"
    nydusd_path = "/usr/local/bin/nydusd"
    nydusimage_path = "/usr/local/bin/nydus-image"
    # fusedev or fscache
    fs_driver = "fusedev"

    [log]
    # Print logs to stdout rather than logging files
    log_to_stdout = true
    # Snapshotter's log level
    level = "info"

  nydusd-config.json: |-
    {
      "device": {
        "backend": {
          "type": "registry",
          "config": {
            "timeout": 5,
            "connect_timeout": 5,
            "retry_limit": 2
          }
        },
        "cache": {
          "type": "blobcache"
        }
      },
      "mode": "direct",
      "digest_validate": false,
      "iostats_files": false,
      "enable_xattr": true,
      "amplify_io": 1048576,
      "fs_prefetch": {
        "enable": true,
        "threads_count": 8,
        "merging_size": 1048576,
        "prefetch_all": true
      }
    }
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nydus-snapshotter
  namespace: nydus-system
  labels:
    app: nydus-snapshotter
spec:
  selector:
    matchLabels:
      app: nydus-snapshotter
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: nydus-snapshotter

    spec:
      serviceAccountName: nydus-snapshotter-sa
      hostNetwork: true
      hostPID: true
      containers:
      - name: nydus-snapshotter
        image: "ghcr.io/containerd/nydus-snapshotter:latest"
        imagePullPolicy: Always
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: FS_DRIVER
            valueFrom:
              configMapKeyRef:
                name: nydus-snapshotter-configs
                key: FS_DRIVER
                optional: true
          - name: ENABLE_CONFIG_FROM_VOLUME
            valueFrom:
              configMapKeyRef:
                name: nydus-snapshotter-configs
                key: ENABLE_CONFIG_FROM_VOLUME
                optional: true 
          - name: ENABLE_RUNTIME_SPECIFIC_SNAPSHOTTER
            valueFrom:
              configMapKeyRef:
                name: nydus-snapshotter-configs
                key: ENABLE_RUNTIME_SPECIFIC_SNAPSHOTTER
                optional: true               
        lifecycle:
          preStop:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                /opt/nydus/snapshotter.sh cleanup
        command: 
         - bash
         - -c
         - |-
           /opt/nydus/snapshotter.sh deploy
        volumeMounts:
        - name: config-volume
          mountPath: "/etc/nydus-snapshotter"
        - name: nydus-lib
          mountPath: "/var/lib/containerd-nydus"
          mountPropagation: Bidirectional
        - name: nydus-run
          mountPath: "/run/containerd-nydus"
          mountPropagation: Bidirectional
        - name: containerd-conf
          mountPath: "/etc/containerd/config.toml"
        - name: local-bin
          mountPath: "/usr/local/bin"

        securityContext:
          privileged: true

      volumes:
      - name: config-volume
        configMap:
          name: nydus-snapshotter-configs
          optional: true
      - name: nydus-run
        hostPath:
          path: /run/containerd-nydus
          type: DirectoryOrCreate
      - name: nydus-lib
        hostPath:
          path: /var/lib/containerd-nydus
          type: DirectoryOrCreate
      - name: containerd-conf
        hostPath:
          path: /etc/containerd/config.toml
      - name: local-bin
        hostPath:
          path: /usr/local/bin/
      
